const sql = require('mssql');

const config = {
  server: 'localhost',
  database: 'BIEUQUYET_CHP',
  user: 'sa',
  password: '123456',
  options: { 
    encrypt: false, 
    trustServerCertificate: true 
  }
};

(async () => {
  try {
    await sql.connect(config);
    console.log('üîå T·∫°o permissions cho d·ª± th·∫£o ID 43...');
    
    const draftId = 43; // "Anh Tu·∫•n Th·∫•y 1"
    
    // L·∫•y th√¥ng tin draft v√† creator
    const draftInfo = await sql.query(`
      SELECT DraftID, Title, CreatedBy, ViewerType
      FROM Drafts 
      WHERE DraftID = ${draftId}
    `);
    
    if (draftInfo.recordset.length === 0) {
      console.log('‚ùå Kh√¥ng t√¨m th·∫•y d·ª± th·∫£o ID 43');
      return;
    }
    
    const draft = draftInfo.recordset[0];
    console.log(`üìã D·ª± th·∫£o: ${draft.Title}, ViewerType: ${draft.ViewerType}, CreatedBy: ${draft.CreatedBy}`);
    
    if (draft.ViewerType === 'specific') {
      // L·∫•y danh s√°ch user (kh√¥ng ph·∫£i Admin) 
      const users = await sql.query(`
        SELECT UserID, FullName, Role 
        FROM Users 
        WHERE Role != 'Admin' AND IsDeleted != 1
      `);
      
      console.log(`üë• T√¨m th·∫•y ${users.recordset.length} user ƒë·ªÉ c·∫•p quy·ªÅn:`);
      
      let permissionsCreated = 0;
      
      // T·∫°o permissions cho t·∫•t c·∫£ user (gi·ªëng nh∆∞ d·ª± th·∫£o 42)
      for (const user of users.recordset) {
        // Ki·ªÉm tra permission ƒë√£ t·ªìn t·∫°i ch∆∞a
        const existing = await sql.query(`
          SELECT ID FROM DraftPermissions 
          WHERE DraftID = ${draftId} AND UserID = ${user.UserID}
        `);
        
        if (existing.recordset.length === 0) {
          // T·∫°o permission m·ªõi
          await sql.query(`
            INSERT INTO DraftPermissions (DraftID, UserID, PermissionType, GrantedBy, GrantedDate, IsActive)
            VALUES (${draftId}, ${user.UserID}, 'view', ${draft.CreatedBy}, GETDATE(), 1)
          `);
          
          console.log(`‚úÖ T·∫°o permission cho User ${user.UserID} (${user.FullName})`);
          permissionsCreated++;
        } else {
          console.log(`‚ö†Ô∏è Permission ƒë√£ t·ªìn t·∫°i cho User ${user.UserID}`);
        }
      }
      
      console.log(`üéâ ƒê√£ t·∫°o ${permissionsCreated} permissions m·ªõi cho d·ª± th·∫£o ID ${draftId}!`);
      
      // Ki·ªÉm tra l·∫°i
      const finalCheck = await sql.query(`
        SELECT COUNT(*) as Total 
        FROM DraftPermissions 
        WHERE DraftID = ${draftId} AND IsActive = 1
      `);
      console.log(`üìä T·ªïng permissions cho d·ª± th·∫£o ID ${draftId}: ${finalCheck.recordset[0].Total}`);
      
    } else {
      console.log('‚ÑπÔ∏è D·ª± th·∫£o kh√¥ng ph·∫£i lo·∫°i "specific", kh√¥ng c·∫ßn t·∫°o permissions');
    }
    
    await sql.close();
  } catch (error) {
    console.error('‚ùå L·ªói:', error.message);
  }
})();
