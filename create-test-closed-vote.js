const sql = require('mssql');

const config = {
    server: 'localhost',
    database: 'HTBIEUQUYET_V6',
    user: '',
    password: '',
    options: {
        encrypt: false,
        trustServerCertificate: true,
        integratedSecurity: true
    }
};

async function createTestClosedVote() {
    try {
        console.log('üîÑ Connecting to database...');
        await sql.connect(config);
        
        const request = new sql.Request();
        
        // T·∫°o phi·∫øu bi·ªÉu quy·∫øt ƒë√£ k·∫øt th√∫c
        const voteResult = await request.query(`
            INSERT INTO Votes (VoteNumber, Title, Content, CreatedBy, AssigneeType, Status, StartDate, EndDate, AutoClose, IsDeleted)
            VALUES 
            ('TEST-001', 'Phi·∫øu test ƒë√£ k·∫øt th√∫c', 'ƒê√¢y l√† phi·∫øu bi·ªÉu quy·∫øt test ƒë√£ k·∫øt th√∫c ƒë·ªÉ ki·ªÉm tra module K·∫øt th√∫c Bi·ªÉu quy·∫øt', 1, 'All', 'Closed', DATEADD(day, -2, GETDATE()), DATEADD(day, -1, GETDATE()), 1, 0);
            
            SELECT SCOPE_IDENTITY() as VoteID;
        `);
        
        const voteId = voteResult.recordset[0].VoteID;
        console.log('‚úÖ Created test vote with ID:', voteId);
        
        // T·∫°o m·ªôt s·ªë k·∫øt qu·∫£ bi·ªÉu quy·∫øt test
        await request.query(`
            INSERT INTO VoteResults (VoteID, UserID, Choice, Reason, SubmittedDate)
            VALUES 
            (${voteId}, 1, 'Agree', 'T√¥i ƒë·ªìng √Ω v·ªõi ƒë·ªÅ xu·∫•t n√†y', DATEADD(day, -1, GETDATE())),
            (${voteId}, 2, 'Disagree', 'C·∫ßn xem x√©t th√™m', DATEADD(day, -1, GETDATE()));
        `);
        
        console.log('‚úÖ Created test vote results');
        
        // T·∫°o th√™m m·ªôt phi·∫øu ƒë√£ k·∫øt th√∫c kh√°c
        const vote2Result = await request.query(`
            INSERT INTO Votes (VoteNumber, Title, Content, CreatedBy, AssigneeType, Status, StartDate, EndDate, AutoClose, IsDeleted)
            VALUES 
            ('TEST-002', 'Phi·∫øu test th·ª© 2 ƒë√£ k·∫øt th√∫c', 'Phi·∫øu bi·ªÉu quy·∫øt test th·ª© hai ƒë·ªÉ c√≥ nhi·ªÅu d·ªØ li·ªáu test', 1, 'All', 'Closed', DATEADD(day, -3, GETDATE()), DATEADD(hour, -12, GETDATE()), 1, 0);
            
            SELECT SCOPE_IDENTITY() as VoteID;
        `);
        
        const vote2Id = vote2Result.recordset[0].VoteID;
        console.log('‚úÖ Created second test vote with ID:', vote2Id);
        
        console.log('üéâ Test data created successfully!');
        
    } catch (error) {
        console.error('‚ùå Error:', error);
    } finally {
        await sql.close();
    }
}

createTestClosedVote();
